C51 COMPILER V9.51   ADC_INT                                                               12/03/2013 18:19:26 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE ADC_INT
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\ADC_INT.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\ADC_INT.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\ADC_INT.lst) CD DB NOIP OT(2
                    -,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\ADC_INT.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: ADC_INT.c
   3          * Version 3.0
   4          *
   5          * Description:
   6          *  This file contains the code that operates during the ADC_DelSig interrupt
   7          *  service routine.
   8          *
   9          * Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions,
  14          * disclaimers, and limitations in the end user license agreement accompanying
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "ADC.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Custom Declarations and Variables
  23          * - add user include files, prototypes and variables between the following
  24          *   #START and #END tags
  25          *******************************************************************************/
  26          /* `#START ADC_SYS_VAR`  */
  27          
  28          /* `#END`  */
  29          
  30          
  31          #if(ADC_IRQ_REMOVE == 0u)
  32          
  33          
  34              /*****************************************************************************
  35              * Function Name: ADC_ISR1
  36              ******************************************************************************
  37              *
  38              * Summary:
  39              *  Handle Interrupt Service Routine.
  40              *
  41              * Parameters:
  42              *  None
  43              *
  44              * Return:
  45              *  None
  46              *
  47              * Reentrant:
  48              *  No
  49              *
  50              *****************************************************************************/
  51              CY_ISR( ADC_ISR1)
  52              {
  53   1              /**************************************************************************
C51 COMPILER V9.51   ADC_INT                                                               12/03/2013 18:19:26 PAGE 2   

  54   1              *  Custom Code
  55   1              *  - add user ISR code between the following #START and #END tags
  56   1              **************************************************************************/
  57   1              /* `#START MAIN_ADC_ISR1`  */
  58   1      
  59   1              /* `#END`  */
  60   1      
  61   1              /* Stop the conversion if conversion mode is single sample and resolution
  62   1              *  is above 16 bits.
  63   1              */
  64   1              #if(ADC_CFG1_RESOLUTION > 16 && \
  65   1                  ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
  66   1                  ADC_StopConvert();
  67   1                  /* Software flag for checking conversion complete or not. Will be used when
  68   1                  *  resolution is above 16 bits and conversion mode is single sample 
  69   1                              */
  70   1                  ADC_convDone = ADC_DEC_CONV_DONE;
  71   1              #endif /* Single sample conversion mode with resolution above 16 bits */
  72   1      
  73   1          }
  74          
  75          
  76              /*****************************************************************************
  77              * Function Name: ADC_ISR2
  78              ******************************************************************************
  79              *
  80              * Summary:
  81              *  Handle Interrupt Service Routine.
  82              *
  83              * Parameters:
  84              *  None
  85              *
  86              * Return:
  87              *  None
  88              *
  89              * Reentrant:
  90              *  No
  91              *
  92              *****************************************************************************/
  93              CY_ISR( ADC_ISR2)
  94              {
  95   1              /***************************************************************************
  96   1              *  Custom Code
  97   1              *  - add user ISR code between the following #START and #END tags
  98   1              **************************************************************************/
  99   1              /* `#START MAIN_ADC_ISR2`  */
 100   1      
 101   1              /* `#END`  */
 102   1      
 103   1              /* Stop the conversion conversion mode is single sample and resolution
 104   1              *  is above 16 bits.
 105   1              */
 106   1              #if(ADC_CFG2_RESOLUTION > 16 && \
 107   1                  ADC_CFG2_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *   resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
 114   1      
 115   1          }
C51 COMPILER V9.51   ADC_INT                                                               12/03/2013 18:19:26 PAGE 3   

 116          
 117          
 118              /*****************************************************************************
 119              * Function Name: ADC_ISR3
 120              ******************************************************************************
 121              *
 122              * Summary:
 123              *  Handle Interrupt Service Routine.
 124              *
 125              * Parameters:
 126              *  None
 127              *
 128              * Return:
 129              *  None
 130              *
 131              * Reentrant:
 132              *  No
 133              *
 134              *****************************************************************************/
 135              CY_ISR( ADC_ISR3)
 136              {
 137   1              /***************************************************************************
 138   1              *  Custom Code
 139   1              *  - add user ISR code between the following #START and #END tags
 140   1              **************************************************************************/
 141   1              /* `#START MAIN_ADC_ISR3`  */
 142   1      
 143   1              /* `#END`  */
 144   1      
 145   1              /* Stop the conversion if conversion mode is set to single sample and
 146   1              *  resolution is above 16 bits.
 147   1              */
 148   1              #if(ADC_CFG3_RESOLUTION > 16 && \
 149   1                  ADC_CFG3_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *  resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
 156   1          }
 157          
 158          
 159              /*****************************************************************************
 160              * Function Name: ADC_ISR4
 161              ******************************************************************************
 162              *
 163              * Summary:
 164              *  Handle Interrupt Service Routine.
 165              *
 166              * Parameters:
 167              *  None
 168              *
 169              * Return:
 170              *  None
 171              *
 172              * Reentrant:
 173              *  No
 174              *
 175              *****************************************************************************/
 176              CY_ISR( ADC_ISR4)
 177              {
C51 COMPILER V9.51   ADC_INT                                                               12/03/2013 18:19:26 PAGE 4   

 178   1              /***************************************************************************
 179   1              *  Custom Code
 180   1              *  - add user ISR code between the following #START and #END tags
 181   1              **************************************************************************/
 182   1              /* `#START MAIN_ADC_ISR4`  */
 183   1      
 184   1              /* `#END`  */
 185   1      
 186   1              /* Stop the conversion if conversion mode is set to single sample and
 187   1              *  resolution is above 16 bits.
 188   1              */
 189   1              #if(ADC_CFG4_RESOLUTION > 16 && \
 190   1                  ADC_CFG4_CONVMODE == ADC_MODE_SINGLE_SAMPLE)
                          ADC_StopConvert();
                          /* Software flag for checking conversion complete or not. Will be used when
                          *  resolution is above 16 bits and conversion mode is single sample 
                                      */
                          ADC_convDone = ADC_DEC_CONV_DONE;
                      #endif /* Single sample conversion mode with resolution above 16 bits */
 197   1          }
 198          
 199          #endif   /* End ADC_IRQ_REMOVE */
 200          
 201          
 202          /* [] END OF FILE */
C51 COMPILER V9.51   ADC_INT                                                               12/03/2013 18:19:26 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ADC_ISR1 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 66
002B 120000      E     LCALL   ADC_StopConvert
                                           ; SOURCE LINE # 70
002E 900000      E     MOV     DPTR,#ADC_convDone
0031 7401              MOV     A,#01H
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
0034 D007              POP     AR7
0036 D006              POP     AR6
0038 D005              POP     AR5
003A D004              POP     AR4
003C D003              POP     AR3
003E D002              POP     AR2
0040 D001              POP     AR1
0042 D000              POP     AR0
0044 D0D0              POP     PSW
0046 D000        E     POP     ?C?XPAGE1SFR
0048 D086              POP     DPS
004A D084              POP     DPL1
004C D085              POP     DPH1
004E D082              POP     DPL
0050 D083              POP     DPH
0052 D0F0              POP     B
0054 D0E0              POP     ACC
0056 32                RETI    
             ; FUNCTION ADC_ISR1 (END)

             ; FUNCTION ADC_ISR2 (BEGIN)
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 115
0000 32                RETI    
             ; FUNCTION ADC_ISR2 (END)

             ; FUNCTION ADC_ISR3 (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 156
0000 32                RETI    
C51 COMPILER V9.51   ADC_INT                                                               12/03/2013 18:19:26 PAGE 6   

             ; FUNCTION ADC_ISR3 (END)

             ; FUNCTION ADC_ISR4 (BEGIN)
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 197
0000 32                RETI    
             ; FUNCTION ADC_ISR4 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     90    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
